version: '3.3'
volumes:
  redisdb:
services:
  api:
    build:
      context: '${PWD}'
      dockerfile: '${PWD}/Dockerfile.package'
    env_file: '${PWD}/configs/config.env'
    ports: 
      - 3000:3000
    depends_on:
      - redisdb
      - acquirers
  api-safe:
    build:
      context: '${PWD}'
      dockerfile: '${PWD}/Dockerfile.package-safe'
    env_file: '${PWD}/configs/config.env'
    ports: 
      - 3000:3000
    depends_on:
      - redisdb
      - acquirers
  api-load:
    build:
      context: '${PWD}'
      dockerfile: '${PWD}/Dockerfile.package'
    env_file: '${PWD}/configs/config-load-container.env'
    ports: 
      - 3000:3000
    depends_on:
      - redisdb
      - acquirers
  nginx:
    image: nginx:1.15.12-alpine
    network_mode: host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - swagger
  redisdb:
    image: redis:4.0.11-alpine3.8 
    command: redis-server --appendonly yes
    volumes:
      - redisdb:/data
    ports: 
      - 6379:6379
  redis-test:
    image: redis:4.0.11-alpine3.8 
    command: redis-server
    ports: 
      - 6380:6379
  test-unit:
    build: .
    command: make test-unit
    volumes:
      - .:/src
  test-integration:
    build: .
    command: make test-integration
    volumes:
      - .:/src
      - ./configs/config-integration-container.json:/src/configs/config-integration.json
    depends_on:
      - redis-test
      - acquirers
  test-all:
    build: .
    command: make test-all
    volumes:
      - .:/src
      - ./configs/config-integration-container.json:/src/configs/config-integration.json
    depends_on:
      - redis-test
      - acquirers
  test-envvars:
    build: .
    command: make test-envvars
    volumes:
      - .:/src
  test-load-ab:
    build: 
      context: .
      dockerfile: '${PWD}/Dockerfile.ab'
    command: [ "./wait-for-it.sh", "localhost:3000", "-s", "--timeout=30", "--", "bash","load-test.sh" ]
    volumes:
      - ./test/load-test-apachebench.sh:/src/test/load-test.sh
      - ./test/apachebench-POST_Transaction.json:/src/test/apachebench-POST_Transaction.json
      - ./third_party/wait-for-it.sh:/src/test/wait-for-it.sh
    network_mode: host
    depends_on:
      - nginx
  test-load-jmeter:
    build: 
      context: .
      dockerfile: '${PWD}/Dockerfile.jmeter'
    command: [ "./wait-for-it.sh", "localhost:3000", "-s", "--timeout=30", "--", "bash","load-test.sh" ]
    volumes:
      - ./test/load-test-jmeter.sh:/src/test/load-test.sh
      - ./test/jmeter-load-test-plan.jmx:/src/test/jmeter-load-test-plan.jmx
      - ./test/jmeter-requests-config.csv:/src/test/jmeter-requests-config.csv
      - ./third_party/wait-for-it.sh:/src/test/wait-for-it.sh
    network_mode: host
    depends_on:
      - nginx
  acquirers:
    build: 
      context: ./test/_acquirers_server_mock
    environment: 
      ACQUIRERS_PORT: 8092
      ACQUIRERS_DELAY: 100
      ACQUIRERS_LOGGING: DEBUG
    volumes:
      - ./test/_acquirers_server_mock/:/src/
    ports: 
      - 8092:8092
  swagger:
    image: swaggerapi/swagger-ui:v3.24.3
    environment: 
      SWAGGER_JSON: /spec/swagger.yml
      PORT: 8080
    network_mode: host
    volumes:
      - ${PWD}/api/swagger.yml:/spec/swagger.yml