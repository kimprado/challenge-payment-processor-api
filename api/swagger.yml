swagger: "2.0"
info:
  title: "Payment Processor API"
  description: "API para processamento de transação com cartão"
  version: "1.0.0"
basePath: "/api"
tags:
- name: "Transaction"
  description: "Permite processamento de transações"
schemes:
- "http"
- "https"
produces:
  - application/json
paths:
  /transactions:
    post:
      tags:
      - "Transaction"
      summary: "Processa transação"
      description: "Processa transação com parâmetro informado"
      parameters:
      - in: "header"
        name: "X-Acquirer-ID"
        required: true
        type: string
        x-example: Stone
      - in: "body"
        name: "transaction"
        description: "Informações representa dados de uma transação para processamento"
        required: true
        schema:
          $ref: "#/definitions/Transaction"
      security:
        - APIKeyAuthorizationBearer: []
      responses:
        200:
          description: "Sucesso. Transação autorizada."
        400:
          $ref: "#/responses/BadRequest"
        401:
          $ref: "#/responses/Unauthorized"
        403:
          $ref: "#/responses/Forbidden"
        404:
          $ref: "#/responses/NotFound"
        500:
          $ref: "#/responses/UnexpectedError"
        503:
          description: "Serviço temporariamente indisponível."
          schema:
            $ref: "#/definitions/Error"
        default:
          description: "Erro inesperado no processamtno da transação."
responses:
  BadRequest:
    description: |
      Um ou mais parâmetros informados são inválidos. Pode ser gerado pela própria API ou proveniente
      do Adquirente.
      
      Erros possíveis da *API*:
        * Um ou Mais parâmetros não são válidos
      
      Erros possíveis do *Adquirente*:
        * Validação do Adquirente ao Processar Transação

    schema:
      $ref: "#/definitions/ParametersError"
  Unauthorized:
    description: "Erro na validação do token JWT."
  Forbidden:
    description: "Token JWT verificado, mas com credenciais sem direito de acesso."
  NotFound:
    description: |
      Recurso solicitado inexistente.
      Erros possíveis:
        * Adquirente inexistente
        * Cartão inexistente
    schema:
      $ref: "#/definitions/Error"
  UnexpectedError:
    description: "Erro inesperado no processamento da transação."
    schema:
      $ref: "#/definitions/Error"
      
definitions:
  Transaction:
    type: object
    description: "Informações representa dados de uma transação"
    properties:
      token:
        type: string
        example: NDQzNiA5ODQxIDM4MTIgNzQ2MCAtIDU4Mg==
      holder:
        type: string
        example: Carlos 
      brand:
        type: string
        example: Visa
      validity:
        type: string
        example: 2021-03
      total:
        type: number
        format: float
        example: 900
      installments:
        type: number
        format: int64
        example: 12
      items:
        type: "array"
        xml:
          name: "items"
          wrapped: true
        items:
          $ref: "#/definitions/TransactionItem"
      id:
        type: string
        example: 60.849.406/0001-75
      address:
        type: string
        example: Avenida Das Américas, 5150, Barra da Tijuca, Rio de Janeiro - RJ
      zipcode:
        type: string
        example: 22640-102
    xml:
      name: "transaction"
  TransactionItem:
    type: object
    description: "representa dados de itens de uma transação"
    properties:
      description:
        type: string
        example: Lindt
      price:
        type: number
        format: float
        example: 900
    xml:
      name: "item"
  Error:
    type: object
    required:
      - title
    properties:
      title:
        type: string
      detail:
        type: string
    xml:
      name: "Error"
  ParametersError:
    type: object
    description: "representa informações sobre erro de parâmetros"
    required:
      - title
    properties:
      title:
        type: string
      detail:
        type: string
      invalid-parameters:
        type: "array"
        xml:
          name: "invalid-parameters"
          wrapped: true
        items:
          $ref: "#/definitions/ParameterError"
    xml:
      name: "ParametersError"
  ParameterError:
    type: "object"
    description: "representa informações sobre erro de parâmetro"
    properties:
      name:
        type: string
      value:
        type: string
      reason:
        type: string
    xml:
      name: "ParameterError"
securityDefinitions:
   APIKeyAuthorizationBearer:
     type: apiKey
     in: header
     name: Authorization
